---- -*- Mode: rpl; -*-                                                                             
---- vim:syn=rosie
----
---- network.rpl     Rosie Pattern Language patterns for hostnames, ip addresses, and such
----
---- Â© Copyright IBM Corporation 2016.
---- LICENSE: MIT License (https://opensource.org/licenses/mit-license.html)
---- AUTHOR: Jamie A. Jennings


-- [1] RFC1123 Requirements for Internet Hosts -- Application and Support
-- (https:--tools.ietf.org/html/rfc1123) 
-- [2] RFC3696 Application Techniques for Checking and Transformation of Names
-- (https:--tools.ietf.org/html/rfc3696)

alias any = [:print:]
alias digit = [:digit:]
alias letter = [:alpha:]

alias ip_component = digit{1,3}			   -- 1-3 digits
alias port_spec = { ":" digit+ }		   -- 1 or more digits
alias dn_start = { letter / digit }
alias dn_rest = {letter / digit / "-"}+

alias dn_component1 = {letter dn_rest*}	                -- must have a letter somewhere
alias dn_component2 = {{digit/"-"}+ dn_component1}      -- in each component
alias dn_component = { dn_component1 / dn_component2 }


-- We avoid matching "1.2.3.4.5", which cannot be an ip address, by
-- requiring that the pattern end with something other than a dot and
-- another digit.
alias ip_address = {ip_component "." ip_component "." ip_component "." ip_component
                    port_spec? !{"." digit} }

network.ip_address = ip_address

-- Qualified domain name (may not be fully qualified, but everyone knows the
-- abbreviation fqdn, so we'll use it).  An odd quirk of this pattern is
-- that when given "jj.raleigh.-.com", which is an illegal domain name, it
-- will match the prefix "jj.raleigh" because that part is legal name
-- syntax.  Blame the hostname spec if you don't like it.
alias fqdn_core = {dn_component {"." dn_component}+ port_spec?}

-- We try to avoid thinking that a dotted identifier is a hostname, e.g. this:
-- CentOS-6.5-x86_64-heat-swcfg_fcr01a.dal09.softlayer.com_port

alias fqdn =  { ![-_] fqdn_core {!"_"} }	    -- Note that [-_] is a set of two chars, - and _
network.fqdn = fqdn
network.host = fqdn

-- Email address

-- Per RFC3696, the specification for the alias part of an email address is considerably more
-- involved than this simple pattern, which will may accept some invalid addresses and may reject
-- some valid ones.

alias email_char = { [:alnum:] / [!#$%\^&*()_-+=|\\'`~?/{}{}:;] }
alias email_alias_part = { email_char {email_char / "."}* }
network.email_address = { email_alias_part "@" fqdn }


-- URI syntax highly simplified here (e.g. no query parms)

alias protocol = {{letter+} "://"}
network.protocol = protocol

alias url = {network.protocol {network.fqdn / network.ip_address} common.path?} /
            {network.protocol {network.fqdn / network.ip_address}? common.path}

network.url = url

-- Some very simple HTTP patterns

http_command_name = "GET" / "HEAD" / "PUT" / "POST" / "DELETE" / 
                    "TRACE" / "OPTIONS" / "CONNECT" / "PATCH"

network.http_command = http_command_name (network.url / common.path)

network.http_version = {"HTTP" "/" digit+ "." digit+}     -- e.g. "HTTP1.1"


